import java.util.*;
public class Main {
    public static void reverseK(Queue<Integer> q, int k) {
        if (q == null || k > q.size() || k < 0) {
            System.out.println("Invalid value of k");
            return;
        }

        Stack<Integer> stack = new Stack<>();
        for (int i = 0; i < k; i++) {
            stack.push(q.remove());
        }
        while (!stack.isEmpty()) {
            q.add(stack.pop());
        }
        int size = q.size();
        for (int i = 0; i < size - k; i++) {
            q.add(q.remove());
        }
    }

    public static void main(String[] args) {
        Queue<Integer> queue = new LinkedList<>();
        queue.add(1);
        queue.add(2);
        queue.add(3);
        queue.add(4);
        queue.add(5);
        int k = 3;
        System.out.println("Original Queue: " + queue);
        reverseK(queue, k);
        System.out.println("Queue after reversing first " + k + " elements: " + queue);
    }
}
